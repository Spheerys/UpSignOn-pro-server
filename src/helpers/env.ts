import fs from 'fs';

const {
  DB_USER,
  DB_PASS,
  DB_NAME,
  DB_HOST,
  DB_PORT,
  NODE_ENV,
  API_PUBLIC_HOSTNAME,
  SESSION_SECRET,
  SERVER_PORT,
  SSL_CERTIFICATE_KEY_PATH, // DEPRECATED
  SSL_CERTIFICATE_CRT_PATH, // DEPRECATED
  LOCALHOST_SSL_CERTIFICATE_KEY_PATH,
  LOCALHOST_SSL_CERTIFICATE_CRT_PATH,
  HTTP_PROXY,
  USE_POSTFIX,
  DKIM_HOSTNAME, // DEPRECATED
  MAIL_HOSTNAME,
  DKIM_KEY_SELECTOR,
  DKIM_PRIVATE_KEY_PATH,
} = process.env;

let DKIM_PRIVATE_KEY;
if (!!USE_POSTFIX && !!DKIM_PRIVATE_KEY_PATH) {
  DKIM_PRIVATE_KEY = fs.readFileSync(DKIM_PRIVATE_KEY_PATH);
}

export default {
  IS_PRODUCTION: NODE_ENV !== 'development',
  DB_HOST,
  DB_PORT: DB_PORT ? Number.parseInt(DB_PORT) : 5432,
  DB_USER,
  DB_NAME,
  DB_PASS,
  SERVER_PORT: SERVER_PORT ? Number.parseInt(SERVER_PORT) : 3000,
  API_PUBLIC_HOSTNAME: API_PUBLIC_HOSTNAME || '',
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  SESSION_SECRET: SESSION_SECRET || require('crypto').randomBytes(64).toString('hex'),
  LOCALHOST_SSL_CERTIFICATE_KEY_PATH:
    LOCALHOST_SSL_CERTIFICATE_KEY_PATH || SSL_CERTIFICATE_KEY_PATH || '',
  LOCALHOST_SSL_CERTIFICATE_CRT_PATH:
    LOCALHOST_SSL_CERTIFICATE_CRT_PATH || SSL_CERTIFICATE_CRT_PATH || '',
  HTTP_PROXY,
  USE_POSTFIX,
  MAIL_HOSTNAME: MAIL_HOSTNAME || DKIM_HOSTNAME,
  DKIM_KEY_SELECTOR,
  DKIM_PRIVATE_KEY,
};
